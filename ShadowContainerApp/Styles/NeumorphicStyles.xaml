<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:utu="using:Uno.Toolkit.UI"
					xmlns:converters="using:ShadowContainerApp.Converters"
					xmlns:ut="using:Uno.Themes">
	<!--#region Shadow ThemeDictionaries-->
	<ResourceDictionary.ThemeDictionaries>
		<ResourceDictionary x:Key="Dark">
			<!--  TextBox  -->
			<utu:ShadowCollection x:Key="TextBoxShadows">
				<utu:Shadow OffsetX="-4" OffsetY="-4" BlurRadius="8" Spread="0" Color="#615B71" Opacity="0.6" IsInner="True" />
				<utu:Shadow OffsetX="4" OffsetY="4" BlurRadius="8" Spread="0" Color="#000000" Opacity="0.4" IsInner="True" />
			</utu:ShadowCollection>

			<!--  TabBar  -->
			<utu:ShadowCollection x:Key="TabBarShadows">
				<utu:Shadow OffsetX="8" OffsetY="8" BlurRadius="32" Spread="4" Color="#000000" Opacity="0.4" IsInner="False" />
				<utu:Shadow OffsetX="-8" OffsetY="-16" BlurRadius="48" Spread="4" Color="#79718E" Opacity="0.4" IsInner="False" />
			</utu:ShadowCollection>
			<utu:ShadowCollection x:Key="ContentTabBarShadows">
				<utu:Shadow OffsetX="4" OffsetY="4" BlurRadius="16" Spread="4" Color="#000000" Opacity="0.6" IsInner="False" />
				<utu:Shadow OffsetX="-4" OffsetY="-4" BlurRadius="16" Spread="4" Color="#79718E" Opacity="0.4" IsInner="False" />
			</utu:ShadowCollection>

			<!--  TabBarItem  -->
			<utu:ShadowCollection x:Key="TabBarItemShadows">
				<utu:Shadow OffsetX="-4" OffsetY="-4" BlurRadius="8" Spread="0" Color="#79718E" Opacity="0.6" IsInner="True" />
				<utu:Shadow OffsetX="4" OffsetY="4" BlurRadius="8" Spread="0" Color="#000000" Opacity="0.4" IsInner="True" />
			</utu:ShadowCollection>

			<!--  Elevated Button Shadows  -->
			<utu:ShadowCollection x:Key="ElevatedButtonNormalShadows">
				<utu:Shadow OffsetX="4" OffsetY="4" BlurRadius="16" Spread="0" Color="#000000" Opacity="0.4" IsInner="False" />
				<utu:Shadow OffsetX="-4" OffsetY="-4" BlurRadius="16" Spread="0" Color="#615B71" Opacity="0.6" IsInner="False" />
				<utu:Shadow OffsetX="1" OffsetY="1" BlurRadius="2" Spread="0" Color="#000000" Opacity="0.1" IsInner="True" />
				<utu:Shadow OffsetX="-1" OffsetY="-1" BlurRadius="2" Spread="0" Color="#615B71" Opacity="0.3" IsInner="True" />
			</utu:ShadowCollection>
			<utu:ShadowCollection x:Key="ElevatedButtonHoveredShadows">
				<utu:Shadow OffsetX="-4" OffsetY="-4" BlurRadius="8" Spread="0" Color="#79718E" Opacity="0.6" IsInner="True" />
				<utu:Shadow OffsetX="4" OffsetY="4" BlurRadius="8" Spread="0" Color="#000000" Opacity="0.4" IsInner="True" />
			</utu:ShadowCollection>
			<utu:ShadowCollection x:Key="ElevatedButtonPressedShadows">
				<utu:Shadow OffsetX="-4" OffsetY="-4" BlurRadius="8" Spread="0" Color="#79718E" Opacity="0.6" IsInner="True" />
				<utu:Shadow OffsetX="4" OffsetY="4" BlurRadius="8" Spread="0" Color="#000000" Opacity="0.4" IsInner="True" />
			</utu:ShadowCollection>
			<utu:ShadowCollection x:Key="ElevatedButtonDisabledShadows">
				<utu:Shadow OffsetX="1" OffsetY="1" BlurRadius="4" Spread="0" Color="#24222A" Opacity="0.4" IsInner="False" />
				<utu:Shadow OffsetX="-1" OffsetY="-1" BlurRadius="4" Spread="0" Color="#5F5B69" Opacity="0.5" IsInner="False" />
			</utu:ShadowCollection>
			<utu:ShadowCollection x:Key="ElevatedButtonFocusedShadows">
				<utu:Shadow OffsetX="-4" OffsetY="-4" BlurRadius="8" Spread="0" Color="#79718E" Opacity="0.6" IsInner="True" />
				<utu:Shadow OffsetX="4" OffsetY="4" BlurRadius="8" Spread="0" Color="#000000" Opacity="0.4" IsInner="True" />
			</utu:ShadowCollection>

			<!--  Filled Button Shadows  -->
			<utu:ShadowCollection x:Key="FilledButtonNormalShadows">
				<utu:Shadow OffsetX="4" OffsetY="4" BlurRadius="16" Spread="0" Color="#A9A2D9" Opacity="0.6" IsInner="False" />
				<utu:Shadow OffsetX="-4" OffsetY="-4" BlurRadius="16" Spread="0" Color="#E5DCFF" Opacity="0.6" IsInner="False" />
				<utu:Shadow OffsetX="-1" OffsetY="-1" BlurRadius="2" Spread="0" Color="#000000" Opacity="0.1" IsInner="True" />
				<utu:Shadow OffsetX="1" OffsetY="1" BlurRadius="2" Spread="0" Color="#FFFFFF" Opacity="0.1" IsInner="True" />
			</utu:ShadowCollection>
			<utu:ShadowCollection x:Key="FilledButtonHoveredShadows">
				<utu:Shadow OffsetX="-4" OffsetY="-4" BlurRadius="8" Spread="0" Color="#E5DCFF" Opacity="0.6" IsInner="True" />
				<utu:Shadow OffsetX="4" OffsetY="4" BlurRadius="8" Spread="0" Color="#A9A2D9" Opacity="0.6" IsInner="True" />
			</utu:ShadowCollection>
			<utu:ShadowCollection x:Key="FilledButtonPressedShadows">
				<utu:Shadow OffsetX="-4" OffsetY="-4" BlurRadius="8" Spread="0" Color="#E5DCFF" Opacity="0.6" IsInner="True" />
				<utu:Shadow OffsetX="4" OffsetY="4" BlurRadius="8" Spread="0" Color="#A9A2D9" Opacity="0.6" IsInner="True" />
			</utu:ShadowCollection>
			<utu:ShadowCollection x:Key="FilledButtonDisabledShadows">
				<utu:Shadow OffsetX="1" OffsetY="1" BlurRadius="4" Spread="0" Color="#A9A2D9" Opacity="1" IsInner="False" />
				<utu:Shadow OffsetX="-1" OffsetY="-1" BlurRadius="4" Spread="0" Color="#E5DCFF" Opacity="0.5" IsInner="False" />
			</utu:ShadowCollection>
			<utu:ShadowCollection x:Key="FilledButtonFocusedShadows">
				<utu:Shadow OffsetX="-4" OffsetY="-4" BlurRadius="8" Spread="0" Color="#E5DCFF" Opacity="0.6" IsInner="True" />
				<utu:Shadow OffsetX="4" OffsetY="4" BlurRadius="8" Spread="0" Color="#A9A2D9" Opacity="0.6" IsInner="True" />
			</utu:ShadowCollection>

		</ResourceDictionary>
		<ResourceDictionary x:Key="Light">
			<!--  TextBox  -->
			<utu:ShadowCollection x:Key="TextBoxShadows">
				<utu:Shadow OffsetX="-4" OffsetY="-4" BlurRadius="4" Spread="0" Color="#FFFFFF" Opacity="0.6" IsInner="True" />
				<utu:Shadow OffsetX="4" OffsetY="4" BlurRadius="4" Spread="0" Color="#AEAEC0" Opacity="0.4" IsInner="True" />
			</utu:ShadowCollection>

			<!--  TabBar  -->
			<utu:ShadowCollection x:Key="TabBarShadows">
				<utu:Shadow OffsetX="8" OffsetY="8" BlurRadius="32" Spread="0" Color="#AEAEC0" Opacity="0.6" IsInner="False" />
				<utu:Shadow OffsetX="-8" OffsetY="-16" BlurRadius="48" Spread="0" Color="#FFFFFF" Opacity="0.6" IsInner="False" />
			</utu:ShadowCollection>
			<utu:ShadowCollection x:Key="ContentTabBarShadows">
				<utu:Shadow OffsetX="4" OffsetY="4" BlurRadius="16" Spread="0" Color="#AEAEC0" Opacity="0.4" IsInner="False" />
				<utu:Shadow OffsetX="-4" OffsetY="-4" BlurRadius="16" Spread="0" Color="#FFFFFF" Opacity="0.4" IsInner="False" />
			</utu:ShadowCollection>

			<!--  TabBarItem  -->
			<utu:ShadowCollection x:Key="TabBarItemShadows">
				<utu:Shadow OffsetX="-4" OffsetY="-4" BlurRadius="8" Spread="0" Color="#FFFFFF" Opacity="0.6" IsInner="True" />
				<utu:Shadow OffsetX="4" OffsetY="4" BlurRadius="8" Spread="0" Color="#AEAEC0" Opacity="0.4" IsInner="True" />
			</utu:ShadowCollection>

			<!--  Elevated Button Shadows  -->
			<utu:ShadowCollection x:Key="ElevatedButtonNormalShadows">
				<utu:Shadow OffsetX="4" OffsetY="4" BlurRadius="16" Spread="0" Color="#000000" Opacity="0.4" IsInner="False" />
				<utu:Shadow OffsetX="-4" OffsetY="-4" BlurRadius="16" Spread="0" Color="#615B71" Opacity="0.6" IsInner="False" />
				<utu:Shadow OffsetX="1" OffsetY="1" BlurRadius="2" Spread="0" Color="#000000" Opacity="0.1" IsInner="True" />
				<utu:Shadow OffsetX="-1" OffsetY="-1" BlurRadius="2" Spread="0" Color="#615B71" Opacity="0.3" IsInner="True" />
			</utu:ShadowCollection>
			<utu:ShadowCollection x:Key="ElevatedButtonHoveredShadows">
				<utu:Shadow OffsetX="-4" OffsetY="-4" BlurRadius="8" Spread="0" Color="#79718E" Opacity="0.6" IsInner="True" />
				<utu:Shadow OffsetX="4" OffsetY="4" BlurRadius="8" Spread="0" Color="#000000" Opacity="0.4" IsInner="True" />
			</utu:ShadowCollection>
			<utu:ShadowCollection x:Key="ElevatedButtonPressedShadows">
				<utu:Shadow OffsetX="-4" OffsetY="-4" BlurRadius="8" Spread="0" Color="#79718E" Opacity="0.6" IsInner="True" />
				<utu:Shadow OffsetX="4" OffsetY="4" BlurRadius="8" Spread="0" Color="#000000" Opacity="0.4" IsInner="True" />
			</utu:ShadowCollection>
			<utu:ShadowCollection x:Key="ElevatedButtonDisabledShadows">
				<utu:Shadow OffsetX="1" OffsetY="1" BlurRadius="4" Spread="0" Color="#24222A" Opacity="0.4" IsInner="False" />
				<utu:Shadow OffsetX="-1" OffsetY="-1" BlurRadius="4" Spread="0" Color="#5F5B69" Opacity="0.5" IsInner="False" />
			</utu:ShadowCollection>
			<utu:ShadowCollection x:Key="ElevatedButtonFocusedShadows">
				<utu:Shadow OffsetX="-4" OffsetY="-4" BlurRadius="8" Spread="0" Color="#79718E" Opacity="0.6" IsInner="True" />
				<utu:Shadow OffsetX="4" OffsetY="4" BlurRadius="8" Spread="0" Color="#000000" Opacity="0.4" IsInner="True" />
			</utu:ShadowCollection>

			<!--  Filled Button Shadows  -->
			<utu:ShadowCollection x:Key="FilledButtonNormalShadows">
				<utu:Shadow OffsetX="4" OffsetY="4" BlurRadius="16" Spread="0" Color="#4C3CB3" Opacity="0.6" IsInner="False" />
				<utu:Shadow OffsetX="-4" OffsetY="-4" BlurRadius="16" Spread="0" Color="#6651F2" Opacity="0.6" IsInner="False" />
				<utu:Shadow OffsetX="-1" OffsetY="-1" BlurRadius="2" Spread="0" Color="#000000" Opacity="0.1" IsInner="True" />
				<utu:Shadow OffsetX="1" OffsetY="1" BlurRadius="2" Spread="0" Color="#FFFFFF" Opacity="0.1" IsInner="True" />
			</utu:ShadowCollection>
			<utu:ShadowCollection x:Key="FilledButtonHoveredShadows">
				<utu:Shadow OffsetX="4" OffsetY="4" BlurRadius="16" Spread="0" Color="#4C3CB3" Opacity="0.7" IsInner="True" />
				<utu:Shadow OffsetX="-4" OffsetY="-4" BlurRadius="16" Spread="0" Color="#6651F2" Opacity="0.5" IsInner="True" />
			</utu:ShadowCollection>
			<utu:ShadowCollection x:Key="FilledButtonPressedShadows">
				<utu:Shadow OffsetX="-4" OffsetY="-4" BlurRadius="8" Spread="0" Color="#6651F2" Opacity="0.6" IsInner="True" />
				<utu:Shadow OffsetX="4" OffsetY="4" BlurRadius="8" Spread="0" Color="#4C3CB3" Opacity="0.6" IsInner="True" />
			</utu:ShadowCollection>
			<utu:ShadowCollection x:Key="FilledButtonDisabledShadows">
				<utu:Shadow OffsetX="1" OffsetY="1" BlurRadius="4" Spread="0" Color="#4C3CB3" Opacity="1" IsInner="False" />
				<utu:Shadow OffsetX="-1" OffsetY="-1" BlurRadius="4" Spread="0" Color="#6651F2" Opacity="1" IsInner="False" />
			</utu:ShadowCollection>
			<utu:ShadowCollection x:Key="FilledButtonFocusedShadows">
				<utu:Shadow OffsetX="4" OffsetY="4" BlurRadius="8" Spread="0" Color="#4C3CB3" Opacity="0.6" IsInner="True" />
				<utu:Shadow OffsetX="-4" OffsetY="-4" BlurRadius="8" Spread="0" Color="#6651F2" Opacity="0.4" IsInner="True" />
			</utu:ShadowCollection>



			<!--  ToggleSwitch  -->
			<utu:ShadowCollection x:Key="ToggleSwitchOnTrackShadows">
				<utu:Shadow OffsetX="1" OffsetY="1" BlurRadius="2" Spread="2" Color="#413399" Opacity="1" IsInner="True" />
				<utu:Shadow OffsetX="-1" OffsetY="-1" BlurRadius="2" Spread="0" Color="#FFFFFF" Opacity="0.6" IsInner="True" />
			</utu:ShadowCollection>
			<utu:ShadowCollection x:Key="ToggleSwitchOffTrackShadows">
				<utu:Shadow OffsetX="-1" OffsetY="-1" BlurRadius="4" Spread="4" Color="#FFFFFF" Opacity="0.7" IsInner="True" />
				<utu:Shadow OffsetX="1" OffsetY="1" BlurRadius="2" Spread="2" Color="#584A7F" Opacity="0.6" IsInner="True" />
			</utu:ShadowCollection>
			<utu:ShadowCollection x:Key="ToggleSwitchOnKnobShadows">
				<utu:Shadow OffsetX="-1" OffsetY="0" BlurRadius="1" Spread="1" Color="#413399" Opacity="1" IsInner="False" />
				<utu:Shadow OffsetX="1" OffsetY="0" BlurRadius="2" Spread="0" Color="#000000" Opacity="0.5" IsInner="True" />
				<utu:Shadow OffsetX="0" OffsetY="4" BlurRadius="4" Spread="0" Color="#000000" Opacity="0.3" IsInner="True" />
				<utu:Shadow OffsetX="-2" OffsetY="4" BlurRadius="2" Spread="0" Color="#FFFFFF" Opacity="0.8" IsInner="True" />
			</utu:ShadowCollection>
			<utu:ShadowCollection x:Key="ToggleSwitchOffKnobShadows">
				<utu:Shadow OffsetX="2" OffsetY="2" BlurRadius="4" Spread="0" Color="#000000" Opacity="0.8" IsInner="True" />
				<utu:Shadow OffsetX="-2" OffsetY="2" BlurRadius="4" Spread="0" Color="#FFFFFF" Opacity="1" IsInner="True" />
				<utu:Shadow OffsetX="-1" OffsetY="-1" BlurRadius="1" Spread="0" Color="#000000" Opacity="0.5" IsInner="True" />
				<utu:Shadow OffsetX="2" OffsetY="0" BlurRadius="2" Spread="0" Color="#000000" Opacity="0.2" IsInner="False" />
			</utu:ShadowCollection>

		</ResourceDictionary>
	</ResourceDictionary.ThemeDictionaries>
	<!--#endregion-->

	<x:Double x:Key="NeumorphicButtonIconContainerSize">18</x:Double>
	<x:Double x:Key="NeumorphicButtonIconSize">12</x:Double>

	<CornerRadius x:Key="NeumorphicButtonCornerRadius">4</CornerRadius>
	<x:Double x:Key="NeumorphicFabFontSize">14</x:Double>

	<utu:ShadowCollection x:Key="EmptyShadows" />

	<!--#region Converters-->
	<converters:FromNullToValueConverter x:Key="HasIconToVisible"
										 NotNullValue="Visible"
										 NullValue="Collapsed" />

	<converters:FromNullToValueConverter x:Key="HasIconToCollapsed"
										 NotNullValue="Collapsed"
										 NullValue="Visible" />
	<ut:FromEmptyStringToValueConverter x:Key="EmptyToCompositeTransformTranslateY"
										NotNullOrEmptyValue="8"
										NullOrEmptyValue="0" />

	<ut:FromBoolToValueConverter x:Key="ToggleSwitchIsOnToOpacity"
								 TrueValue="1"
								 FalseValue="0" />

	<ut:FromBoolToValueConverter x:Key="ToggleSwitchIsOffToOpacity"
								 TrueValue="0"
								 FalseValue="1" />

	<ut:FromNullToValueConverter x:Key="ToggleSwitchOffContentToContentSize"
								 NullValue="{StaticResource SmallThumbOffSize}"
								 NotNullValue="{StaticResource MediumThumbOffSize}" />

	<ut:FromNullToValueConverter x:Key="ToggleSwitchOffContentToCornerRadius"
								 NullValue="8"
								 NotNullValue="12" />

	<ut:FromNullToValueConverter x:Key="ToggleSwitchOffContentToContentMargin"
								 NullValue="0,0,6,0"
								 NotNullValue="0,0,2,0" />

	<!--#endregion-->

	<!--#region TextBox Style-->
	<Style x:Key="NeumorphicTextBoxStyle"
		   TargetType="TextBox">
		<Setter Property="Foreground" Value="{ThemeResource OnSurfaceBrush}" />
		<Setter Property="PlaceholderForeground" Value="{ThemeResource OnSurfaceVariantBrush}" />
		<Setter Property="Background" Value="{ThemeResource SurfaceBrush}" />
		<Setter Property="CornerRadius" Value="8" />

		<!--  Start: Body Large Typo  -->
		<Setter Property="FontFamily" Value="{ThemeResource MaterialMediumFontFamily}" />
		<Setter Property="FontWeight" Value="{ThemeResource BodyLargeFontWeight}" />
		<Setter Property="FontSize" Value="{ThemeResource BodyLargeFontSize}" />
		<Setter Property="CharacterSpacing" Value="{ThemeResource BodyLargeCharacterSpacing}" />
		<!--  End: Body Large Typo  -->

		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="VerticalContentAlignment" Value="Center" />

		<Setter Property="Padding" Value="16,16,14,16" />

		<Setter Property="MinHeight" Value="56" />

		<!--  Workaround for WinUI issue: https://github.com/microsoft/microsoft-ui-xaml/issues/6388  -->
		<Setter Property="ut:ControlExtensions.Icon" Value="{x:Null}" />

		<Setter Property="UseSystemFocusVisuals" Value="False" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="TextBox">
					<utu:ShadowContainer x:Name="RootPanel"
										 Background="{TemplateBinding Background}"
										 Shadows="{ThemeResource TextBoxShadows}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver">
									<VisualState.Setters>
										<Setter Target="PlaceholderElement.Foreground" Value="{ThemeResource OnSurfaceMediumBrush}" />
										<Setter Target="StateOverlay.Background" Value="{ThemeResource PrimaryHoverBrush}" />
										<Setter Target="StateOverlay.Opacity" Value="0.5" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Focused">
									<VisualState.Setters>
										<Setter Target="PlaceholderElement.Foreground" Value="{ThemeResource PrimaryBrush}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="IconPresenter.Foreground" Value="{ThemeResource OnSurfaceLowBrush}" />
										<Setter Target="ContentElement.Foreground" Value="{ThemeResource OnSurfaceLowBrush}" />
										<Setter Target="PlaceholderElement.Foreground" Value="{ThemeResource OnSurfaceLowBrush}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ButtonStates">
								<VisualState x:Name="ButtonVisible">
									<VisualState.Setters>
										<Setter Target="DeleteButton.Visibility" Value="Visible" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="ButtonCollapsed" />
							</VisualStateGroup>
							<VisualStateGroup x:Name="HeaderStates">
								<VisualState x:Name="NotEmpty">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PlaceholderElement_CompositeTransform"
														 Storyboard.TargetProperty="TranslateY"
														 Duration="{StaticResource MaterialTextBoxAnimationDuration}"
														 EasingFunction="{StaticResource MaterialEaseInOutFunction}"
														 To="-11" />
										<!--  ContentElement TranslateY value changing depending if there is a PlaceholderText or not  -->
										<DoubleAnimation Storyboard.TargetName="ContentElement_CompositeTransform"
														 Storyboard.TargetProperty="TranslateY"
														 Duration="{StaticResource MaterialAnimationDuration}"
														 EasingFunction="{StaticResource MaterialEaseInOutFunction}"
														 To="{Binding PlaceholderText, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource EmptyToCompositeTransformTranslateY}, TargetNullValue=0, FallbackValue=0}" />
										<DoubleAnimation Storyboard.TargetName="PlaceholderElement_CompositeTransform"
														 Storyboard.TargetProperty="ScaleX"
														 Duration="{StaticResource MaterialTextBoxAnimationDuration}"
														 EasingFunction="{StaticResource MaterialEaseInOutFunction}"
														 To="0.7" />
										<DoubleAnimation Storyboard.TargetName="PlaceholderElement_CompositeTransform"
														 Storyboard.TargetProperty="ScaleY"
														 Duration="{StaticResource MaterialTextBoxAnimationDuration}"
														 EasingFunction="{StaticResource MaterialEaseInOutFunction}"
														 To="0.7" />
									</Storyboard>
									<VisualState.StateTriggers>
										<StateTrigger IsActive="{Binding Text, Converter={StaticResource EmptyToFalseConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
									</VisualState.StateTriggers>
								</VisualState>
								<VisualState x:Name="Empty">
									<VisualState.StateTriggers>
										<StateTrigger IsActive="{Binding Text, Converter={StaticResource EmptyToTrueConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
									</VisualState.StateTriggers>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<!--  workaround gallery#999: transparent background added to fix hitbox on ios/droid  -->
						<Grid x:Name="RootGrid"
							  Background="Transparent"
							  Width="{TemplateBinding Width}"
							  MinHeight="{TemplateBinding MinHeight}"
							  CornerRadius="{TemplateBinding CornerRadius}">

							<Border x:Name="StateOverlay" />
							<Grid Padding="{TemplateBinding Padding}">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>

								<!--  Border in place to properly vertically center the icon inside when it's a one-line TextBox  -->
								<!--  but keep it in the same place and at the top when it's a multiline TextBox  -->
								<Border Height="28"
										VerticalAlignment="Top">
									<ContentPresenter x:Name="IconPresenter"
													  Content="{Binding Path=(ut:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}}"
													  Foreground="{ThemeResource PrimaryBrush}"
													  HorizontalAlignment="Center"
													  Width="20"
													  Margin="1,0,18,0"
													  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
													  Visibility="{Binding Path=(ut:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}" />
								</Border>

								<ScrollViewer x:Name="ContentElement"
											  Grid.Column="1"
											  HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
											  HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
											  IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
											  IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
											  IsTabStop="False"
											  IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
											  VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
											  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
											  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
											  ZoomMode="Disabled"
											  AutomationProperties.AccessibilityView="Raw">
									<ScrollViewer.RenderTransform>
										<CompositeTransform x:Name="ContentElement_CompositeTransform" />
									</ScrollViewer.RenderTransform>
								</ScrollViewer>

								<!--  Border in place to properly vertically center the placeholder inside when it's a one-line TextBox  -->
								<!--  but keep it in the same place and at the top when it's a multiline TextBox  -->
								<Border Grid.Column="1"
										Height="28"
										VerticalAlignment="Top">
									<TextBlock x:Name="PlaceholderElement"
											   Foreground="{Binding PlaceholderForeground, RelativeSource={RelativeSource TemplatedParent}}"
											   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
											   IsHitTestVisible="False"
											   RenderTransformOrigin="0,0.5"
											   Text="{TemplateBinding PlaceholderText}"
											   TextAlignment="{TemplateBinding TextAlignment}"
											   TextWrapping="{TemplateBinding TextWrapping}"
											   VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
										<TextBlock.RenderTransform>
											<CompositeTransform x:Name="PlaceholderElement_CompositeTransform" />
										</TextBlock.RenderTransform>
									</TextBlock>
								</Border>

								<Button x:Name="DeleteButton"
										Grid.Column="2"
										Margin="8,0,0,0"
										IsTabStop="False"
										Foreground="{ThemeResource PrimaryBrush}"
										Style="{StaticResource MaterialDeleteButtonStyle}"
										VerticalAlignment="Stretch"
										Visibility="Collapsed"
										AutomationProperties.AccessibilityView="Raw" />
							</Grid>
						</Grid>

					</utu:ShadowContainer>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!--#endregion-->

	<!--#region Button Style-->
	<Style x:Key="NeumorphicSmallElevatedButtonStyle"
		   BasedOn="{StaticResource MaterialBaseButtonStyle}"
		   TargetType="Button">

		<Setter Property="Foreground" Value="{ThemeResource PrimaryBrush}" />
		<Setter Property="Background" Value="{ThemeResource SurfaceBrush}" />
		<Setter Property="MinWidth" Value="38" />
		<Setter Property="MinHeight" Value="38" />
		<Setter Property="CornerRadius" Value="19" />
		<Setter Property="Padding" Value="10,0" />
		<Setter Property="UseSystemFocusVisuals" Value="False" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<utu:ShadowContainer x:Name="RootPanel"
										 Background="{TemplateBinding Background}"
										 Shadows="{ThemeResource ElevatedButtonNormalShadows}">

						<VisualStateManager.VisualStateGroups>
							<!--
								ShadowContainer direct child shouldn't have background.
								However, here we are just reusing it as a state-layer to apply a non-opaque overlay.
							-->
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver">
									<VisualState.Setters>
										<Setter Target="RootPanel.Shadows" Value="{ThemeResource ElevatedButtonHoveredShadows}" />
										<Setter Target="RootGrid.Background" Value="{ThemeResource OnSurfaceHoverBrush}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Pressed">
									<VisualState.Setters>
										<Setter Target="RootPanel.Shadows" Value="{ThemeResource ElevatedButtonPressedShadows}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="RootPanel.Shadows" Value="{ThemeResource ElevatedButtonDisabledShadows}" />
										<Setter Target="RootPanel.Opacity" Value="0.38" />
										<Setter Target="RootGrid.Background" Value="{ThemeResource OnSurfaceDisabledBrush}" />
										<!--  using OnSurfaceBrush instead of OnSurfaceLowBrush, because 38% opacity is already applied from RootPanel  -->
										<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource OnSurfaceBrush}" />
										<Setter Target="IconPresenter.Foreground" Value="{ThemeResource OnSurfaceBrush}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<VisualState.Setters>
										<Setter Target="RootPanel.Shadows" Value="{ThemeResource ElevatedButtonFocusedShadows}" />
										<Setter Target="RootGrid.Background" Value="{ThemeResource OnSurfaceFocusedBrush}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="PointerFocused" />
								<VisualState x:Name="Unfocused" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Grid x:Name="RootGrid"
							  CornerRadius="{TemplateBinding CornerRadius}"
							  Height="{TemplateBinding Height}"
							  Width="{TemplateBinding Width}"
							  MinHeight="{TemplateBinding MinWidth}">

							<Grid CornerRadius="{TemplateBinding CornerRadius}"
								  Margin="{TemplateBinding Padding}"
								  HorizontalAlignment="Center"
								  VerticalAlignment="Center">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="*" />
								</Grid.ColumnDefinitions>

								<Viewbox Height="{StaticResource NeumorphicButtonIconContainerSize}"
										 Width="{StaticResource NeumorphicButtonIconContainerSize}"
										 HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										 VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										 Visibility="{Binding Path=(ut:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}">
									<ContentPresenter x:Name="IconPresenter"
													  Content="{Binding Path=(ut:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}}"
													  HorizontalAlignment="{StaticResource ButtonIconHorizontalAlignment}"
													  VerticalAlignment="{StaticResource ButtonIconVerticalAlignment}" />
								</Viewbox>
								<ContentPresenter x:Name="ContentPresenter"
												  Grid.Column="1"
												  Margin="{StaticResource ButtonContentMargin}"
												  Content="{TemplateBinding Content}"
												  ContentTemplate="{TemplateBinding ContentTemplate}"
												  ContentTransitions="{TemplateBinding ContentTransitions}"
												  FontFamily="{TemplateBinding FontFamily}"
												  FontSize="{TemplateBinding FontSize}"
												  FontWeight="{TemplateBinding FontWeight}"
												  CharacterSpacing="{TemplateBinding CharacterSpacing}"
												  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
												  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
							</Grid>
						</Grid>
					</utu:ShadowContainer>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--  Medium  -->
	<Style x:Key="NeumorphicMediumElevatedButtonStyle"
		   BasedOn="{StaticResource NeumorphicSmallElevatedButtonStyle}"
		   TargetType="Button">

		<Setter Property="MinWidth" Value="48" />
		<Setter Property="MinHeight" Value="48" />
		<Setter Property="CornerRadius" Value="24" />
		<Setter Property="Padding" Value="15,0" />

	</Style>

	<!--  Large  -->
	<Style x:Key="NeumorphicLargeElevatedButtonStyle"
		   BasedOn="{StaticResource NeumorphicSmallElevatedButtonStyle}"
		   TargetType="Button">

		<Setter Property="MinWidth" Value="58" />
		<Setter Property="MinHeight" Value="58" />
		<Setter Property="CornerRadius" Value="29" />
		<Setter Property="Padding" Value="20,0" />

	</Style>
	<!--  Filled Style  -->
	<!--  Small  -->
	<Style x:Key="NeumorphicSmallFilledButtonStyle"
		   BasedOn="{StaticResource MaterialBaseButtonStyle}"
		   TargetType="Button">

		<Setter Property="Foreground" Value="{ThemeResource OnPrimaryBrush}" />
		<Setter Property="Background" Value="{ThemeResource PrimaryBrush}" />
		<Setter Property="MinWidth" Value="38" />
		<Setter Property="MinHeight" Value="38" />
		<Setter Property="CornerRadius" Value="19" />
		<Setter Property="Padding" Value="10,0" />
		<Setter Property="UseSystemFocusVisuals" Value="False" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<utu:ShadowContainer x:Name="RootPanel"
										 Background="{TemplateBinding Background}"
										 Shadows="{ThemeResource FilledButtonNormalShadows}">

						<VisualStateManager.VisualStateGroups>
							<!--
								ShadowContainer direct child shouldn't have background.
								However, here we are just reusing it as a state-layer to apply a non-opaque overlay.
							-->
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver">
									<VisualState.Setters>
										<Setter Target="RootPanel.Shadows" Value="{ThemeResource FilledButtonHoveredShadows}" />
										<Setter Target="RootGrid.Background" Value="{ThemeResource OnPrimaryHoverBrush}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Pressed">
									<VisualState.Setters>
										<Setter Target="RootPanel.Shadows" Value="{ThemeResource FilledButtonPressedShadows}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="RootPanel.Shadows" Value="{ThemeResource FilledButtonDisabledShadows}" />
										<Setter Target="RootPanel.Opacity" Value="0.85" />
										<Setter Target="RootGrid.Background" Value="{ThemeResource OnSurfaceDisabledBrush}" />
										<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource OnPrimaryLowBrush}" />
										<Setter Target="IconPresenter.Foreground" Value="{ThemeResource OnPrimaryLowBrush}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<VisualState.Setters>
										<Setter Target="RootPanel.Shadows" Value="{ThemeResource FilledButtonFocusedShadows}" />
										<Setter Target="RootGrid.Background" Value="{ThemeResource OnPrimaryFocusedBrush}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="PointerFocused" />
								<VisualState x:Name="Unfocused" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Grid x:Name="RootGrid"
							  CornerRadius="{TemplateBinding CornerRadius}"
							  Height="{TemplateBinding Height}"
							  Width="{TemplateBinding Width}"
							  MinHeight="{TemplateBinding MinWidth}">

							<Grid CornerRadius="{TemplateBinding CornerRadius}"
								  Margin="{TemplateBinding Padding}"
								  HorizontalAlignment="Center"
								  VerticalAlignment="Center">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="*" />
								</Grid.ColumnDefinitions>

								<Border Height="{StaticResource NeumorphicButtonIconContainerSize}"
										Width="{StaticResource NeumorphicButtonIconContainerSize}"
										Visibility="{Binding Path=(ut:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}">
									<ContentPresenter x:Name="IconPresenter"
													  Content="{Binding Path=(ut:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}}"
													  Width="{StaticResource NeumorphicButtonIconSize}"
													  Height="{StaticResource NeumorphicButtonIconSize}"
													  HorizontalAlignment="{StaticResource ButtonIconHorizontalAlignment}"
													  VerticalAlignment="{StaticResource ButtonIconVerticalAlignment}"
													  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
													  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" />
								</Border>

								<ContentPresenter x:Name="ContentPresenter"
												  Grid.Column="1"
												  Margin="{StaticResource ButtonContentMargin}"
												  Content="{TemplateBinding Content}"
												  ContentTemplate="{TemplateBinding ContentTemplate}"
												  ContentTransitions="{TemplateBinding ContentTransitions}"
												  FontFamily="{TemplateBinding FontFamily}"
												  FontSize="{TemplateBinding FontSize}"
												  FontWeight="{TemplateBinding FontWeight}"
												  CharacterSpacing="{TemplateBinding CharacterSpacing}"
												  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
												  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
							</Grid>
						</Grid>
					</utu:ShadowContainer>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--  Medium  -->
	<Style x:Key="NeumorphicMediumFilledButtonStyle"
		   BasedOn="{StaticResource NeumorphicSmallFilledButtonStyle}"
		   TargetType="Button">

		<Setter Property="MinWidth" Value="48" />
		<Setter Property="MinHeight" Value="48" />
		<Setter Property="CornerRadius" Value="24" />
		<Setter Property="Padding" Value="15,0" />

	</Style>

	<!--  Large  -->
	<Style x:Key="NeumorphicLargeFilledButtonStyle"
		   BasedOn="{StaticResource NeumorphicSmallFilledButtonStyle}"
		   TargetType="Button">

		<Setter Property="MinWidth" Value="58" />
		<Setter Property="MinHeight" Value="58" />
		<Setter Property="CornerRadius" Value="29" />
		<Setter Property="Padding" Value="20,0" />

	</Style>

	<!--#endregion-->

	<!--#region TabBar Style-->
	<Style x:Key="NeumorphicBaseTabBarStyle"
		   BasedOn="{StaticResource DefaultTabBarStyle}"
		   TargetType="utu:TabBar">
		<Setter Property="Width" Value="300" />
		<Setter Property="Height" Value="80" />
		<Setter Property="CornerRadius" Value="16,16,0,0" />
		<Setter Property="Background" Value="{ThemeResource SurfaceBrush}" />
		<Setter Property="SelectionIndicatorPresenterStyle" Value="{StaticResource MaterialTabBarSelectionIndicatorPresenterStyle}" />
		<Setter Property="UseSystemFocusVisuals" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="utu:TabBar">
					<utu:ShadowContainer Shadows="{ThemeResource TabBarShadows}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="OrientationStates">
								<VisualState x:Name="Horizontal">
									<VisualState.Setters>
										<Setter Target="BelowSelectionIndicatorPresenter.VerticalContentAlignment" Value="Stretch" />
										<Setter Target="BelowSelectionIndicatorPresenter.HorizontalContentAlignment" Value="Left" />
										<Setter Target="AboveSelectionIndicatorPresenter.VerticalContentAlignment" Value="Stretch" />
										<Setter Target="AboveSelectionIndicatorPresenter.HorizontalContentAlignment" Value="Left" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Vertical">
									<VisualState.Setters>
										<Setter Target="BelowSelectionIndicatorPresenter.VerticalContentAlignment" Value="Top" />
										<Setter Target="BelowSelectionIndicatorPresenter.HorizontalContentAlignment" Value="Stretch" />
										<Setter Target="AboveSelectionIndicatorPresenter.VerticalContentAlignment" Value="Top" />
										<Setter Target="AboveSelectionIndicatorPresenter.HorizontalContentAlignment" Value="Stretch" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="IndicatorPlacementStates">
								<VisualState x:Name="Above" />
								<VisualState x:Name="Below">
									<VisualState.Setters>
										<Setter Target="BelowSelectionIndicatorPresenter.Visibility" Value="Visible" />
										<Setter Target="AboveSelectionIndicatorPresenter.Visibility" Value="Collapsed" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid x:Name="TabBarGrid"
							  Background="{TemplateBinding Background}"
							  CornerRadius="{TemplateBinding CornerRadius}">
							<utu:TabBarSelectionIndicatorPresenter x:Name="BelowSelectionIndicatorPresenter"
																   Padding="{TemplateBinding Padding}"
																   AutomationProperties.AutomationId="BelowSelectionIndicatorPresenter"
																   Content="{TemplateBinding SelectionIndicatorContent}"
																   ContentTemplate="{TemplateBinding SelectionIndicatorContentTemplate}"
																   Foreground="{TemplateBinding Foreground}"
																   IndicatorTransitionMode="{TemplateBinding SelectionIndicatorTransitionMode}"
																   Opacity="0"
																   Owner="{Binding RelativeSource={RelativeSource TemplatedParent}}"
																   Style="{TemplateBinding SelectionIndicatorPresenterStyle}"
																   Visibility="Collapsed" />
							<ItemsPresenter x:Name="TabBarItemsPresenter"
											Width="{TemplateBinding Width}"
											Height="{TemplateBinding Height}"
											Padding="{TemplateBinding Padding}" />
							<utu:TabBarSelectionIndicatorPresenter x:Name="AboveSelectionIndicatorPresenter"
																   Padding="{TemplateBinding Padding}"
																   AutomationProperties.AutomationId="AboveSelectionIndicatorPresenter"
																   Content="{TemplateBinding SelectionIndicatorContent}"
																   ContentTemplate="{TemplateBinding SelectionIndicatorContentTemplate}"
																   Foreground="{TemplateBinding Foreground}"
																   IndicatorTransitionMode="{TemplateBinding SelectionIndicatorTransitionMode}"
																   Opacity="0"
																   Owner="{Binding RelativeSource={RelativeSource TemplatedParent}}"
																   Style="{TemplateBinding SelectionIndicatorPresenterStyle}" />
						</Grid>
					</utu:ShadowContainer>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="NeumorphicVerticalTabBarStyle"
		   BasedOn="{StaticResource NeumorphicBaseTabBarStyle}"
		   TargetType="utu:TabBar">
		<Setter Property="Width" Value="80" />
		<Setter Property="Height" Value="320" />
		<Setter Property="CornerRadius" Value="40" />
		<Setter Property="HorizontalAlignment" Value="Center" />
		<Setter Property="MinWidth" Value="{ThemeResource NavigationTabBarWidthOrHeight}" />
		<Setter Property="utu:SafeArea.Insets" Value="VisibleBounds" />
		<Setter Property="ItemContainerStyle" Value="{StaticResource NeumorphicBaseNavigationTabBarItemStyle}" />
		<Setter Property="Orientation" Value="Vertical" />
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<utu:TabBarListPanel Orientation="Vertical" />
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="NeumorphicBottomTabBarStyle"
		   BasedOn="{StaticResource NeumorphicBaseTabBarStyle}"
		   TargetType="utu:TabBar">
		<Setter Property="VerticalAlignment" Value="Bottom" />
		<Setter Property="MinHeight" Value="{ThemeResource NavigationTabBarWidthOrHeight}" />
		<Setter Property="utu:SafeArea.Insets" Value="Bottom" />
		<Setter Property="ItemContainerStyle" Value="{StaticResource NeumorphicBaseNavigationTabBarItemStyle}" />
	</Style>
	<Style x:Key="NeumorphicTopTabBarStyle"
		   BasedOn="{StaticResource DefaultTabBarStyle}"
		   TargetType="utu:TabBar">
		<Setter Property="Width" Value="300" />
		<Setter Property="Height" Value="80" />
		<Setter Property="CornerRadius" Value="40" />
		<Setter Property="Background" Value="{ThemeResource SurfaceBrush}" />
		<Setter Property="VerticalAlignment" Value="Top" />
		<Setter Property="MinHeight" Value="{ThemeResource TopTabBarHeight}" />
		<Setter Property="utu:SafeArea.Insets" Value="Top" />
		<Setter Property="ItemContainerStyle" Value="{StaticResource NeumorphicBaseContentTabBarItemStyle}" />
		<Setter Property="UseSystemFocusVisuals" Value="False" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="utu:TabBar">
					<utu:ShadowContainer Background="{TemplateBinding Background}"
										 Shadows="{ThemeResource ContentTabBarShadows}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="OrientationStates">
								<VisualState x:Name="Horizontal">
									<VisualState.Setters>
										<Setter Target="BelowSelectionIndicatorPresenter.VerticalContentAlignment" Value="Stretch" />
										<Setter Target="BelowSelectionIndicatorPresenter.HorizontalContentAlignment" Value="Left" />
										<Setter Target="AboveSelectionIndicatorPresenter.VerticalContentAlignment" Value="Stretch" />
										<Setter Target="AboveSelectionIndicatorPresenter.HorizontalContentAlignment" Value="Left" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Vertical">
									<VisualState.Setters>
										<Setter Target="BelowSelectionIndicatorPresenter.VerticalContentAlignment" Value="Top" />
										<Setter Target="BelowSelectionIndicatorPresenter.HorizontalContentAlignment" Value="Stretch" />
										<Setter Target="AboveSelectionIndicatorPresenter.VerticalContentAlignment" Value="Top" />
										<Setter Target="AboveSelectionIndicatorPresenter.HorizontalContentAlignment" Value="Stretch" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="IndicatorPlacementStates">
								<VisualState x:Name="Above" />
								<VisualState x:Name="Below">
									<VisualState.Setters>
										<Setter Target="BelowSelectionIndicatorPresenter.Visibility" Value="Visible" />
										<Setter Target="AboveSelectionIndicatorPresenter.Visibility" Value="Collapsed" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid x:Name="TabBarGrid"
							  CornerRadius="{TemplateBinding CornerRadius}">
							<utu:TabBarSelectionIndicatorPresenter x:Name="BelowSelectionIndicatorPresenter"
																   Padding="{TemplateBinding Padding}"
																   AutomationProperties.AutomationId="BelowSelectionIndicatorPresenter"
																   Content="{TemplateBinding SelectionIndicatorContent}"
																   ContentTemplate="{TemplateBinding SelectionIndicatorContentTemplate}"
																   Foreground="{TemplateBinding Foreground}"
																   IndicatorTransitionMode="{TemplateBinding SelectionIndicatorTransitionMode}"
																   Opacity="0"
																   Owner="{Binding RelativeSource={RelativeSource TemplatedParent}}"
																   Style="{TemplateBinding SelectionIndicatorPresenterStyle}"
																   Visibility="Collapsed" />
							<ItemsPresenter x:Name="TabBarItemsPresenter"
											Width="{TemplateBinding Width}"
											Height="{TemplateBinding Height}"
											Padding="{TemplateBinding Padding}" />
							<utu:TabBarSelectionIndicatorPresenter x:Name="AboveSelectionIndicatorPresenter"
																   Padding="{TemplateBinding Padding}"
																   AutomationProperties.AutomationId="AboveSelectionIndicatorPresenter"
																   Content="{TemplateBinding SelectionIndicatorContent}"
																   ContentTemplate="{TemplateBinding SelectionIndicatorContentTemplate}"
																   Foreground="{TemplateBinding Foreground}"
																   IndicatorTransitionMode="{TemplateBinding SelectionIndicatorTransitionMode}"
																   Opacity="0"
																   Owner="{Binding RelativeSource={RelativeSource TemplatedParent}}"
																   Style="{TemplateBinding SelectionIndicatorPresenterStyle}" />
						</Grid>
					</utu:ShadowContainer>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--#region TabBarItem-->
	<x:String x:Key="ContentTabBarItemCornerRadius">32</x:String>
	<x:Double x:Key="ContentTabBarItemHeight">64</x:Double>
	<x:Double x:Key="ContentTabBarItemWidth">120</x:Double>

	<Style x:Key="NeumorphicBaseNavigationTabBarItemStyle"
		   TargetType="utu:TabBarItem">
		<Setter Property="FontFamily" Value="{ThemeResource MaterialMediumFontFamily}" />
		<Setter Property="FontSize" Value="{ThemeResource LabelMediumFontSize}" />
		<Setter Property="FontWeight" Value="{ThemeResource LabelMediumFontWeight}" />
		<Setter Property="UseSystemFocusVisuals" Value="False" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="Background" Value="{ThemeResource SurfaceBrush}" />
		<Setter Property="Foreground" Value="{ThemeResource OnSurfaceVariantBrush}" />
		<Setter Property="Padding" Value="{ThemeResource NavigationTabBarItemPadding}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="utu:TabBarItem">
					<Grid x:Name="LayoutRoot"
						  HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
						  VerticalAlignment="{TemplateBinding VerticalAlignment}"
						  Background="{TemplateBinding Background}"
						  Control.IsTemplateFocusTarget="True"
						  Padding="{TemplateBinding Padding}"
						  AutomationProperties.AccessibilityView="Raw"
						  CornerRadius="{TemplateBinding CornerRadius}">

						<Grid x:Name="ContentGrid"
							  RowSpacing="4">
							<Grid.RowDefinitions>
								<RowDefinition x:Name="IconRow"
											   Height="*" />
								<RowDefinition x:Name="ContentRow"
											   Height="Auto" />
							</Grid.RowDefinitions>

							<Grid x:Name="IconStateLayer"
								  Width="{ThemeResource NavigationTabBarItemActiveIndicatorWidth}"
								  Height="{ThemeResource NavigationTabBarItemActiveIndicatorHeight}"
								  HorizontalAlignment="Center"
								  VerticalAlignment="Center"
								  CornerRadius="{ThemeResource NavigationTabBarItemActiveIndicatorCornerRadius}" />

							<utu:ShadowContainer x:Name="IconShadowPanel">
								<Grid x:Name="ActiveIndicator"
									  Width="{ThemeResource NavigationTabBarItemActiveIndicatorWidth}"
									  Height="{ThemeResource NavigationTabBarItemActiveIndicatorHeight}"
									  HorizontalAlignment="Center"
									  VerticalAlignment="Center"
									  CornerRadius="{ThemeResource NavigationTabBarItemActiveIndicatorCornerRadius}">

									<Border Width="{ThemeResource NavigationTabBarItemIconHeight}"
											Height="{ThemeResource NavigationTabBarItemIconHeight}"
											HorizontalAlignment="Center"
											VerticalAlignment="Center">
										<Viewbox x:Name="IconBox"
												 HorizontalAlignment="Center">
											<ContentPresenter x:Name="Icon"
															  Content="{TemplateBinding Icon}"
															  Foreground="{TemplateBinding Foreground}" />

										</Viewbox>
									</Border>
								</Grid>
							</utu:ShadowContainer>

							<Grid x:Name="ContentStateLayer"
								  Grid.Row="1"
								  HorizontalAlignment="Center"
								  VerticalAlignment="Center"
								  Height="40"
								  Width="70"
								  CornerRadius="20"
								  Visibility="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource HasIconToCollapsed}}" />

							<utu:ShadowContainer x:Name="ContentShadowPanel"
												 Grid.Row="1"
												 Visibility="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource HasIconToCollapsed}}">
								<Grid x:Name="ShadowContentPresenterGrid"
									  HorizontalAlignment="Center"
									  VerticalAlignment="Center">
									<Border HorizontalAlignment="Center"
											VerticalAlignment="Center">
										<ContentPresenter x:Name="ShadowContentPresenter"
														  Content="{TemplateBinding Content}"
														  FontFamily="{TemplateBinding FontFamily}"
														  FontSize="{TemplateBinding FontSize}"
														  FontWeight="{TemplateBinding FontWeight}"
														  Foreground="{TemplateBinding Foreground}"
														  TextWrapping="NoWrap"
														  HorizontalAlignment="Center"
														  VerticalAlignment="Center" />
									</Border>
								</Grid>
							</utu:ShadowContainer>

							<Grid x:Name="ContentPresenterGrid"
								  HorizontalAlignment="Center"
								  VerticalAlignment="Center"
								  Grid.Row="1"
								  Visibility="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource HasIconToVisible}}">
								<Border HorizontalAlignment="Center"
										VerticalAlignment="Center">
									<ContentPresenter x:Name="ContentPresenter"
													  Content="{TemplateBinding Content}"
													  FontFamily="{TemplateBinding FontFamily}"
													  FontSize="{TemplateBinding FontSize}"
													  FontWeight="{TemplateBinding FontWeight}"
													  Foreground="{TemplateBinding Foreground}"
													  TextWrapping="NoWrap"
													  HorizontalAlignment="Center"
													  VerticalAlignment="Center" />
								</Border>
							</Grid>
						</Grid>

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="PointerStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver">
									<VisualState.Setters>
										<Setter Target="IconShadowPanel.Shadows" Value="{ThemeResource TabBarItemShadows}" />
										<Setter Target="ContentShadowPanel.Shadows" Value="{ThemeResource TabBarItemShadows}" />
										<Setter Target="IconStateLayer.Background" Value="{ThemeResource PrimaryHoverBrush}" />
										<Setter Target="ContentStateLayer.Background" Value="{ThemeResource PrimaryHoverBrush}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Pressed">
									<VisualState.Setters>
										<Setter Target="IconShadowPanel.Shadows" Value="{ThemeResource TabBarItemShadows}" />
										<Setter Target="ContentShadowPanel.Shadows" Value="{ThemeResource TabBarItemShadows}" />
										<Setter Target="IconStateLayer.Background" Value="{ThemeResource PrimaryPressedBrush}" />
										<Setter Target="ContentStateLayer.Background" Value="{ThemeResource PrimaryPressedBrush}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Selected">
									<VisualState.Setters>
										<Setter Target="IconShadowPanel.Shadows" Value="{ThemeResource TabBarItemShadows}" />
										<Setter Target="ContentShadowPanel.Shadows" Value="{ThemeResource TabBarItemShadows}" />
										<Setter Target="Icon.Foreground" Value="{ThemeResource PrimaryBrush}" />
										<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource PrimaryBrush}" />
										<Setter Target="ShadowContentPresenter.Foreground" Value="{ThemeResource PrimaryBrush}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="PointerOverSelected">
									<VisualState.Setters>
										<Setter Target="IconShadowPanel.Shadows" Value="{ThemeResource TabBarItemShadows}" />
										<Setter Target="ContentShadowPanel.Shadows" Value="{ThemeResource TabBarItemShadows}" />
										<Setter Target="Icon.Foreground" Value="{ThemeResource PrimaryBrush}" />
										<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource PrimaryBrush}" />
										<Setter Target="ShadowContentPresenter.Foreground" Value="{ThemeResource PrimaryBrush}" />
										<Setter Target="IconStateLayer.Background" Value="{ThemeResource PrimaryHoverBrush}" />
										<Setter Target="ContentStateLayer.Background" Value="{ThemeResource PrimaryHoverBrush}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="PressedSelected">
									<VisualState.Setters>
										<Setter Target="IconShadowPanel.Shadows" Value="{ThemeResource TabBarItemShadows}" />
										<Setter Target="ContentShadowPanel.Shadows" Value="{ThemeResource TabBarItemShadows}" />
										<Setter Target="Icon.Foreground" Value="{ThemeResource PrimaryBrush}" />
										<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource PrimaryBrush}" />
										<Setter Target="ShadowContentPresenter.Foreground" Value="{ThemeResource PrimaryBrush}" />
										<Setter Target="IconStateLayer.Background" Value="{ThemeResource PrimaryPressedBrush}" />
										<Setter Target="ContentStateLayer.Background" Value="{ThemeResource PrimaryPressedBrush}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="DisabledStates">
								<VisualState x:Name="Enabled" />
								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="ActiveIndicator.Background" Value="Transparent" />
										<Setter Target="Icon.Foreground" Value="{ThemeResource OnSurfaceVariantColor}" />
										<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource OnSurfaceVariantColor}" />
										<Setter Target="ShadowContentPresenter.Foreground" Value="{ThemeResource OnSurfaceVariantColor}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="TabBarIconPositionStates">
								<VisualState x:Name="IconOnTop" />
								<VisualState x:Name="IconOnly">
									<VisualState.Setters>
										<Setter Target="ContentShadowPanel.Visibility" Value="Collapsed" />
										<Setter Target="ContentGrid.RowSpacing" Value="0" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="ContentOnly">
									<VisualState.Setters>
										<Setter Target="IconShadowPanel.Visibility" Value="Collapsed" />
										<Setter Target="IconStateLayer.Visibility" Value="Collapsed" />
										<Setter Target="ContentPresenterGrid.Height" Value="{ThemeResource NavigationTabBarItemActiveIndicatorHeight}" />
										<Setter Target="ContentPresenterGrid.Width" Value="{ThemeResource NavigationTabBarItemActiveIndicatorWidth}" />
										<Setter Target="ContentPresenterGrid.CornerRadius" Value="{ThemeResource NavigationTabBarItemActiveIndicatorCornerRadius}" />
										<Setter Target="ContentPresenter.HorizontalAlignment" Value="Center" />
										<Setter Target="ContentPresenter.VerticalAlignment" Value="Center" />
										<Setter Target="ShadowContentPresenterGrid.Height" Value="40" />
										<Setter Target="ShadowContentPresenterGrid.Width" Value="70" />
										<Setter Target="ShadowContentPresenterGrid.CornerRadius" Value="20" />
										<Setter Target="ShadowContentPresenter.HorizontalAlignment" Value="Center" />
										<Setter Target="ShadowContentPresenter.VerticalAlignment" Value="Center" />
										<Setter Target="IconRow.Height" Value="0" />
										<Setter Target="ContentRow.Height" Value="*" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="NeumorphicBaseContentTabBarItemStyle"
		   TargetType="utu:TabBarItem">
		<Setter Property="FontFamily" Value="{ThemeResource MaterialMediumFontFamily}" />
		<Setter Property="FontSize" Value="{ThemeResource LabelMediumFontSize}" />
		<Setter Property="FontWeight" Value="{ThemeResource LabelMediumFontWeight}" />
		<Setter Property="UseSystemFocusVisuals" Value="False" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="Background" Value="{ThemeResource SurfaceBrush}" />
		<Setter Property="Foreground" Value="{ThemeResource OnSurfaceVariantBrush}" />
		<Setter Property="Padding" Value="8" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="utu:TabBarItem">
					<Grid x:Name="LayoutRoot"
						  HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
						  VerticalAlignment="{TemplateBinding VerticalAlignment}"
						  Background="{TemplateBinding Background}"
						  Control.IsTemplateFocusTarget="True"
						  Padding="{TemplateBinding Padding}"
						  AutomationProperties.AccessibilityView="Raw"
						  CornerRadius="{TemplateBinding CornerRadius}">

						<utu:ShadowContainer x:Name="ShadowPanel"
											 Shadows="{ThemeResource TabBarItemShadows}">
							<Grid x:Name="ContentPanel"
								  CornerRadius="{StaticResource ContentTabBarItemCornerRadius}"
								  Height="{StaticResource ContentTabBarItemHeight}"
								  Width="{StaticResource ContentTabBarItemWidth}">

								<Border x:Name="StateLayer" />
								<Grid x:Name="ContentGrid"
									  HorizontalAlignment="Center"
									  VerticalAlignment="Center"
									  Padding="12,8">
									<Grid.RowDefinitions>
										<RowDefinition x:Name="IconRow"
													   Height="*" />
										<RowDefinition x:Name="ContentRow"
													   Height="*" />
									</Grid.RowDefinitions>

									<Grid x:Name="ActiveIndicator"
										  HorizontalAlignment="Center"
										  VerticalAlignment="Center"
										  Width="24"
										  Height="24">

										<Border Width="{ThemeResource NavigationTabBarItemIconHeight}"
												Height="{ThemeResource NavigationTabBarItemIconHeight}"
												HorizontalAlignment="Center"
												VerticalAlignment="Center">
											<Viewbox x:Name="IconBox"
													 HorizontalAlignment="Center">
												<ContentPresenter x:Name="Icon"
																  Content="{TemplateBinding Icon}"
																  Foreground="{TemplateBinding Foreground}" />

											</Viewbox>
										</Border>
									</Grid>
									<Grid x:Name="ContentPresenterGrid"
										  Grid.Row="1"
										  HorizontalAlignment="Center"
										  VerticalAlignment="Center"
										  Height="16">
										<Border HorizontalAlignment="Center"
												VerticalAlignment="Center">
											<ContentPresenter x:Name="ContentPresenter"
															  Content="{TemplateBinding Content}"
															  FontFamily="{TemplateBinding FontFamily}"
															  FontSize="{TemplateBinding FontSize}"
															  FontWeight="{TemplateBinding FontWeight}"
															  Foreground="{TemplateBinding Foreground}"
															  TextWrapping="NoWrap"
															  HorizontalAlignment="Center"
															  VerticalAlignment="Center" />
										</Border>
									</Grid>
								</Grid>

							</Grid>
						</utu:ShadowContainer>

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="PointerStates">
								<VisualState x:Name="Normal">
									<VisualState.Setters>
										<Setter Target="ShadowPanel.Shadows" Value="{StaticResource EmptyShadows}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="PointerOver">
									<VisualState.Setters>
										<Setter Target="StateLayer.Background" Value="{ThemeResource OnSurfaceHoverBrush}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Pressed">
									<VisualState.Setters>
										<Setter Target="StateLayer.Background" Value="{ThemeResource OnSurfacePressedBrush}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Selected">
									<VisualState.Setters>
										<Setter Target="Icon.Foreground" Value="{ThemeResource PrimaryBrush}" />
										<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource PrimaryBrush}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="PointerOverSelected">
									<VisualState.Setters>
										<Setter Target="StateLayer.Background" Value="{ThemeResource PrimaryHoverBrush}" />
										<Setter Target="Icon.Foreground" Value="{ThemeResource PrimaryBrush}" />
										<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource PrimaryBrush}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="PressedSelected">
									<VisualState.Setters>
										<Setter Target="StateLayer.Background" Value="{ThemeResource PrimaryPressedBrush}" />
										<Setter Target="Icon.Foreground" Value="{ThemeResource PrimaryBrush}" />
										<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource PrimaryBrush}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="DisabledStates">
								<VisualState x:Name="Enabled" />
								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationTabBarBackgroundDisabled}" />
										<Setter Target="Icon.Foreground" Value="{ThemeResource NavigationTabBarItemIconForegroundDisabled}" />
										<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationTabBarForegroundDisabled}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="TabBarIconPositionStates">
								<VisualState x:Name="IconOnTop" />
								<VisualState x:Name="IconOnly">
									<VisualState.Setters>
										<Setter Target="ContentPanel.CornerRadius" Value="20" />
										<Setter Target="ContentPanel.Height" Value="40" />
										<Setter Target="ContentPanel.Width" Value="80" />
										<Setter Target="ContentRow.Height" Value="0" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="ContentOnly">
									<VisualState.Setters>
										<Setter Target="ContentPanel.CornerRadius" Value="20" />
										<Setter Target="ContentPanel.Height" Value="40" />
										<Setter Target="ContentPanel.Width" Value="80" />
										<Setter Target="IconRow.Height" Value="0" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="NeumorphicFabTabBarItemStyle"
		   TargetType="utu:TabBarItem">
		<Setter Property="FontFamily" Value="{ThemeResource MaterialMediumFontFamily}" />
		<Setter Property="FontSize" Value="{ThemeResource LabelMediumFontSize}" />
		<Setter Property="FontWeight" Value="{ThemeResource LabelMediumFontWeight}" />
		<Setter Property="IsSelectable" Value="False" />
		<Setter Property="UseSystemFocusVisuals" Value="False" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="CornerRadius" Value="64" />
		<Setter Property="Padding" Value="{ThemeResource FabTabBarItemPadding}" />
		<Setter Property="Background" Value="{ThemeResource PrimaryContainerColor}" />
		<Setter Property="Foreground" Value="{ThemeResource OnPrimaryContainerColor}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="utu:TabBarItem">
					<utu:ShadowContainer x:Name="RootPanel"
										 Background="{TemplateBinding Background}"
										 Shadows="{ThemeResource FabShadows}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver">
									<VisualState.Setters>
										<Setter Target="StateOverlay.Background" Value="{ThemeResource OnPrimaryContainerHoverBrush}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Pressed">
									<VisualState.Setters>
										<Setter Target="RootPanel.Shadows" Value="{ThemeResource FabPressedShadows}" />
										<Setter Target="StateOverlay.Background" Value="{ThemeResource OnPrimaryContainerPressedBrush}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Selected" />
								<VisualState x:Name="PointerOverSelected">
									<VisualState.Setters>
										<Setter Target="StateOverlay.Background" Value="{ThemeResource OnPrimaryContainerHoverBrush}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="PressedSelected">
									<VisualState.Setters>
										<Setter Target="RootPanel.Shadows" Value="{ThemeResource FabPressedShadows}" />
										<Setter Target="StateOverlay.Background" Value="{ThemeResource OnPrimaryContainerPressedBrush}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Disabled" />
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<VisualState.Setters>
										<Setter Target="StateOverlay.Background" Value="{ThemeResource OnPrimaryContainerFocusedBrush}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="PointerFocused" />
								<VisualState x:Name="Unfocused" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<!--  hardcoded size needed until shadows layout patch  -->
						<Grid x:Name="Root"
							  Width="56"
							  Height="56"
							  HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
							  VerticalAlignment="{TemplateBinding VerticalAlignment}"
							  CornerRadius="{TemplateBinding CornerRadius}">

							<Border x:Name="StateOverlay" />

							<StackPanel x:Name="ContentPanel"
										Margin="{TemplateBinding Padding}"
										Orientation="Horizontal">

								<!--  Icon  -->
								<Viewbox Width="{ThemeResource FabTabBarItemContentWidthOrHeight}"
										 Height="{ThemeResource FabTabBarItemContentWidthOrHeight}"
										 HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										 VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										 Visibility="{Binding Path=Icon, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}">

									<ContentPresenter x:Name="IconPresenter"
													  Content="{TemplateBinding Icon}"
													  Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource TemplatedParent}}" />

								</Viewbox>

								<!--  Icon/Content spacing  -->
								<Border Visibility="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource EmptyToCollapsed}, FallbackValue=Collapsed, TargetNullValue=Collapsed}">
									<Border Width="{ThemeResource FabTabBarItemIconTextPadding}"
											Visibility="{Binding Path=Icon, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}" />
								</Border>

								<!--  Content  -->
								<ContentPresenter x:Name="ContentPresenter"
												  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
												  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
												  Content="{TemplateBinding Content}"
												  ContentTemplate="{TemplateBinding ContentTemplate}"
												  ContentTransitions="{TemplateBinding ContentTransitions}"
												  FontFamily="{TemplateBinding FontFamily}"
												  FontSize="{TemplateBinding FontSize}"
												  FontWeight="{TemplateBinding FontWeight}" />

							</StackPanel>

						</Grid>
					</utu:ShadowContainer>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!--#endregion-->

	<!--#endregion-->


</ResourceDictionary>
